module.exports = {
    // full options on: http://i18next.com/docs/options/#init-options
  lng: 'en-US',
  fallbackLng: 'en-US',
  resources: {
    'en-US': {
      translation: {
        'Append': 'Append {{- what}}',
        'Add Lane above': 'Add Lane above',
        'Divide into two Lanes': 'Divide into two Lanes',
        'Divide into three Lanes': 'Divide into three Lanes',
        'Add Lane below': 'Add Lane below',
        'Append compensation activity': 'Append compensation activity',
        'Change type': 'Change type',
        'Connect using Association': 'Connect using Association',
        'Connect using Sequence/MessageFlow or Association': 'Connect using Sequence/MessageFlow or Association',
        'Connect using DataInputAssociation': 'Connect using DataInputAssociation',
        'Remove': 'Remove',
        'flow elements must be children of pools/participants': 'flow elements must be children of pools/participants',
        'out of bounds release': 'out of bounds release',
        'more than child lanes': 'more than {{- number}} child lanes',
        'element required': 'element required',
        'no parent for': 'no parent for ',
        'no shape type specified': 'no shape type specified',
        'no parent for in': 'no parent for {{- whatfor}} in {{- whatin}}',
        'Create': 'Create {{- what}}',
        'Activate the hand tool': 'Activate the hand tool',
        'Activate the lasso tool': 'Activate the lasso tool',
        'Activate the create/remove space tool': 'Activate the create/remove space tool',
        'Create expanded SubProcess': 'Create expanded SubProcess',
        'Create Pool/Participant': 'Create Pool/Participant',
        'Ad-hoc': 'Ad-hoc',

        'element not yet drawn': 'element {{- element}} referenced by {{- referenced_by}}#{{- property}} not yet drawn',
        'unknown di for element': 'unknown di {{- element_di}} for element {{- element_semantic}}',
        'missing #attachedToRef': 'missing {{- boundary_semantic}}#attachedToRef',
        '# Ref not specified': '{{- element_semantic}}#{{- side}}Ref not specified',
        'already rendered element': 'already rendered {{- element}}',
        'failed to import': 'failed to import {{- element}}',
        'multiple DI elements defined for': 'multiple DI elements defined for {{- element}}',
        'no bpmnElement referenced in': 'no bpmnElement referenced in {{-element}}',
        'diagram not part of bpmn:Definitions': 'diagram not part of bpmn:Definitions',
        'no diagram to display': 'no diagram to display',
        'no plane for': 'no plane for {{- element}}',
        'no process or collaboration to display': 'no process or collaboration to display',
        'correcting missing bpmnElement on_to': 'correcting missing bpmnElement on {{- element_on}} to {{-element_to}}',
        'unsupported bpmnElement for': 'unsupported bpmnElement for {{- element_plane}} : {{- element_root}}',
        'unrecognized flowElement in context': 'unrecognized flowElement {{- element}} in context {{-context}}',

        'Parallel Multi Instance': 'Parallel Multi Instance',
        'Sequential Multi Instance': 'Sequential Multi Instance',
        'Loop': 'Loop',
        'Start Event': 'Start Event',
        'End Event': 'End Event',
        'Message Intermediate Catch Event': 'Message Intermediate Catch Event',
        'Message Intermediate Throw Event': 'Message Intermediate Throw Event',
        'Timer Intermediate Catch Event': 'Timer Intermediate Catch Event',
        'Escalation Intermediate Throw Event': 'Escalation Intermediate Throw Event',
        'Conditional Intermediate Catch Event': 'Conditional Intermediate Catch Event',
        'Link Intermediate Catch Event': 'Link Intermediate Catch Event',
        'Link Intermediate Throw Event': 'Link Intermediate Throw Event',
        'Compensation Intermediate Throw Event': 'Compensation Intermediate Throw Event',
        'Signal Intermediate Catch Event': 'Signal Intermediate Catch Event',
        'Signal Intermediate Throw Event': 'Signal Intermediate Throw Event',
        'Intermediate Throw Event': 'Intermediate Throw Event',
        'Message End Event': 'Message End Event',
        'Escalation End Event': 'Escalation End Event',
        'Error End Event': 'Error End Event',
        'Cancel End Event': 'Cancel End Event',
        'Compensation End Event': 'Compensation End Event',
        'Signal End Event': 'Signal End Event',
        'Terminate End Event': 'Terminate End Event',
        'Exclusive Gateway': 'Exclusive Gateway',
        'Parallel Gateway': 'Parallel Gateway',
        'Inclusive Gateway': 'Inclusive Gateway',
        'Complex Gateway': 'Complex Gateway',
        'Event based Gateway': 'Event based Gateway',
        'Event based instantiating Gateway': 'Event based instantiating Gateway',
        'Parallel Event based instantiating Gateway': 'Parallel Event based instantiating Gateway',
        'Transaction': 'Transaction',
        'Event Sub Process': 'Event Sub Process',
        'Sub Process': 'Sub Process',
        'Task': 'Task',
        'Send Task': 'Send Task',
        'Receive Task': 'Receive Task',
        'User Task': 'User Task',
        'Manual Task': 'Manual Task',
        'Business Rule Task': 'Business Rule Task',
        'Service Task': 'Service Task',
        'Script Task': 'Script Task',
        'Call Activity': 'Call Activity',
        'Sub Process (collapsed)': 'Sub Process (collapsed)',
        'Message Boundary Event': 'Message Boundary Event',
        'Timer Boundary Event': 'Timer Boundary Event',
        'Escalation Boundary Event': 'Escalation Boundary Event',
        'Conditional Boundary Event': 'Conditional Boundary Event',
        'Error Boundary Event': 'Error Boundary Event',
        'Cancel Boundary Event': 'Cancel Boundary Event',
        'Signal Boundary Event': 'Signal Boundary Event',
        'Compensation Boundary Event': 'Compensation Boundary Event',
        'Message Boundary Event (non-interrupting)': 'Message Boundary Event (non-interrupting)',
        'Timer Boundary Event (non-interrupting)': 'Timer Boundary Event (non-interrupting)',
        'Escalation Boundary Event (non-interrupting)': 'Escalation Boundary Event (non-interrupting)',
        'Conditional Boundary Event (non-interrupting)': 'Conditional Boundary Event (non-interrupting)',
        'Signal Boundary Event (non-interrupting)': 'Signal Boundary Event (non-interrupting)',
        'Message Start Event': 'Message Start Event',
        'Timer Start Event': 'Timer Start Event',
        'Conditional Start Event': 'Conditional Start Event',
        'Signal Start Event': 'Signal Start Event',
        'Error Start Event': 'Error Start Event',
        'Escalation Start Event': 'Escalation Start Event',
        'Compensation Start Event': 'Compensation Start Event',
        'Message Start Event (non-interrupting)': 'Message Start Event (non-interrupting)',
        'Timer Start Event (non-interrupting)': 'Timer Start Event (non-interrupting)',
        'Conditional Start Event (non-interrupting)': 'Conditional Start Event (non-interrupting)',
        'Signal Start Event (non-interrupting)': 'Signal Start Event (non-interrupting)',
        'Escalation Start Event (non-interrupting)': 'Escalation Start Event (non-interrupting)',
        'Sequence Flow': 'Sequence Flow',
        'Default Flow': 'Default Flow',
        'Conditional Flow': 'Conditional Flow'
      }
    }
  }
};